To do:

Home features:

X - New Post button
  - New post module

Modals:

X - Register

X - Login
  - Once logged in, change top-bar buttons (context)

X - Logout

Sorting:

- New/Top on Home 

- By Genre -> On Home
  - Side-effect: Change background color of genre block to full

View Post:

- Pull up a single Post
  - Display all comments
  - Comment box

Styling:

- Global styles
  - Page containers
  - Buttons 
  - Form styles 

- Module styles
  - Recreate for module styles
  - Page, comment 


Newest stuff to tackle:

- Styling
  - Page container
  - Form container 
  
- SortDiv seperate component (reuse for genre pages)
- Rework:
  - Post for Youtube only
  - Post blocks for Youtube thumbnail

- Get/Post
  - Wire up between Front + Back 
    - Register
    - Login
    - Logout 
  - Post wiring
    - New Post
    - Home
      - Request, new and popular
    - By Genre 


Register/Login system:

New User setup:

- User comes to site 
  - Wants to create New Post, clicks on New Post
  - New Post checks localstorage for JWT token
    - If none: Redirects to Register/Login page 
      - Register: User is directed to verify through Spotify 
          - Backend: Ports user to Spotify, Spotify callbacks to Backend
          - Backend: Requests body and tokens, once done redirects to Frontend with info
          - Frontend on redirect strips info and tokens, saves them to localstorage, clears url, redirects to Register form 
        - Frontend fetches user info from Spotify to auto-fill register form  
        - Once registered: User is redirected to New Post
        - Upon initial search, frontend calls Spotify API
          - If rejected, new access_token is called by backend 
          - Once accepted, front-end recieves info as requested
        - New User makes New Post 
      - Login: User is checked for spotify tokens in localstorage
        - If no Spotify tokens in localstorage: User is ported to Spotify